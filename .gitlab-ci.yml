stages:
  - build_and_test

agreementmaker:
  stage: build_and_test
  image: docker:24.0.5
  script:
    - apk add --no-cache bash make
    - cd _scripts
    - echo "ğŸ”¨ Building agreementmaker"
    - bash build "agreementmaker"
    - echo "ğŸ§ª Testing agreementmaker"
    - bash test "agreementmaker"
  artifacts:
    expire_in: 1 week

dbpedia-spotlight:
  stage: build_and_test
  image: docker:24.0.5
  script:
    - apk add --no-cache bash make
    - cd _scripts
    - echo "ğŸ”¨ Building dbpedia-spotlight"
    - bash build "dbpedia-spotlight"
    - echo "ğŸ§ª Testing dbpedia-spotlight"
    - bash test "dbpedia-spotlight"
  artifacts:
    expire_in: 1 week

dedup:
  stage: build_and_test
  image: docker:24.0.5
  script:
    - apk add --no-cache bash make
    - cd _scripts
    - echo "ğŸ”¨ Building dedup"
    - bash build "dedup"
    - echo "ğŸ§ª Testing dedup"
    - bash test "dedup"
  artifacts:
    expire_in: 1 week

deepmatcher:
  stage: build_and_test
  image: docker:24.0.5
  script:
    - apk add --no-cache bash make
    - cd _scripts
    - echo "ğŸ”¨ Building deepmatcher"
    - bash build "deepmatcher"
    - echo "ğŸ§ª Testing deepmatcher"
    - bash test "deepmatcher"
  artifacts:
    expire_in: 1 week

falcon:
  stage: build_and_test
  image: docker:24.0.5
  script:
    - apk add --no-cache bash make
    - cd _scripts
    - echo "ğŸ”¨ Building falcon"
    - bash build "falcon"
    - echo "ğŸ§ª Testing falcon"
    - bash test "falcon"
  artifacts:
    expire_in: 1 week

FLORA:
  stage: build_and_test
  image: docker:24.0.5
  script:
    - apk add --no-cache bash make
    - cd _scripts
    - echo "ğŸ”¨ Building FLORA"
    - bash build "FLORA"
    - echo "ğŸ§ª Testing FLORA"
    - bash test "FLORA"
  artifacts:
    expire_in: 1 week

jedai:
  stage: build_and_test
  image: docker:24.0.5
  script:
    - apk add --no-cache bash make
    - cd _scripts
    - echo "ğŸ”¨ Building jedai"
    - bash build "jedai"
    - echo "ğŸ§ª Testing jedai"
    - bash test "jedai"
  artifacts:
    expire_in: 1 week

Karma-Linux:
  stage: build_and_test
  image: docker:24.0.5
  script:
    - apk add --no-cache bash make
    - cd _scripts
    - echo "ğŸ”¨ Building Karma-Linux"
    - bash build "Karma-Linux"
    - echo "ğŸ§ª Testing Karma-Linux"
    - bash test "Karma-Linux"
  artifacts:
    expire_in: 1 week

limes:
  stage: build_and_test
  image: docker:24.0.5
  script:
    - apk add --no-cache bash make
    - cd _scripts
    - echo "ğŸ”¨ Building limes"
    - bash build "limes"
    - echo "ğŸ§ª Testing limes"
    - bash test "limes"
  artifacts:
    expire_in: 1 week

LIMES:
  stage: build_and_test
  image: docker:24.0.5
  script:
    - apk add --no-cache bash make
    - cd _scripts
    - echo "ğŸ”¨ Building LIMES"
    - bash build "LIMES"
    - echo "ğŸ§ª Testing LIMES"
    - bash test "LIMES"
  artifacts:
    expire_in: 1 week

magellan:
  stage: build_and_test
  image: docker:24.0.5
  script:
    - apk add --no-cache bash make
    - cd _scripts
    - echo "ğŸ”¨ Building magellan"
    - bash build "magellan"
    - echo "ğŸ§ª Testing magellan"
    - bash test "magellan"
  artifacts:
    expire_in: 1 week

OntoAligner:
  stage: build_and_test
  image: docker:24.0.5
  script:
    - apk add --no-cache bash make
    - cd _scripts
    - echo "ğŸ”¨ Building OntoAligner"
    - bash build "OntoAligner"
    - echo "ğŸ§ª Testing OntoAligner"
    - bash test "OntoAligner"
  artifacts:
    expire_in: 1 week

paris:
  stage: build_and_test
  image: docker:24.0.5
  script:
    - apk add --no-cache bash make
    - cd _scripts
    - echo "ğŸ”¨ Building paris"
    - bash build "paris"
    - echo "ğŸ§ª Testing paris"
    - bash test "paris"
  artifacts:
    expire_in: 1 week

pellet:
  stage: build_and_test
  image: docker:24.0.5
  script:
    - apk add --no-cache bash make
    - cd _scripts
    - echo "ğŸ”¨ Building pellet"
    - bash build "pellet"
    - echo "ğŸ§ª Testing pellet"
    - bash test "pellet"
  artifacts:
    expire_in: 1 week

pyjedai:
  stage: build_and_test
  image: docker:24.0.5
  script:
    - apk add --no-cache bash make
    - cd _scripts
    - echo "ğŸ”¨ Building pyjedai"
    - bash build "pyjedai"
    - echo "ğŸ§ª Testing pyjedai"
    - bash test "pyjedai"
  artifacts:
    expire_in: 1 week

rdfunit:
  stage: build_and_test
  image: docker:24.0.5
  script:
    - apk add --no-cache bash make
    - cd _scripts
    - echo "ğŸ”¨ Building rdfunit"
    - bash build "rdfunit"
    - echo "ğŸ§ª Testing rdfunit"
    - bash test "rdfunit"
  artifacts:
    expire_in: 1 week

rebel:
  stage: build_and_test
  image: docker:24.0.5
  script:
    - apk add --no-cache bash make
    - cd _scripts
    - echo "ğŸ”¨ Building rebel"
    - bash build "rebel"
    - echo "ğŸ§ª Testing rebel"
    - bash test "rebel"
  artifacts:
    expire_in: 1 week

rel:
  stage: build_and_test
  image: docker:24.0.5
  script:
    - apk add --no-cache bash make
    - cd _scripts
    - echo "ğŸ”¨ Building rel"
    - bash build "rel"
    - echo "ğŸ§ª Testing rel"
    - bash test "rel"
  artifacts:
    expire_in: 1 week

rmlmapper:
  stage: build_and_test
  image: docker:24.0.5
  script:
    - apk add --no-cache bash make
    - cd _scripts
    - echo "ğŸ”¨ Building rmlmapper"
    - bash build "rmlmapper"
    - echo "ğŸ§ª Testing rmlmapper"
    - bash test "rmlmapper"
  artifacts:
    expire_in: 1 week

stanford-openie:
  stage: build_and_test
  image: docker:24.0.5
  script:
    - apk add --no-cache bash make
    - cd _scripts
    - echo "ğŸ”¨ Building stanford-openie"
    - bash build "stanford-openie"
    - echo "ğŸ§ª Testing stanford-openie"
    - bash test "stanford-openie"
  artifacts:
    expire_in: 1 week

template:
  stage: build_and_test
  image: docker:24.0.5
  script:
    - apk add --no-cache bash make
    - cd _scripts
    - echo "ğŸ”¨ Building template"
    - bash build "template"
    - echo "ğŸ§ª Testing template"
    - bash test "template"
  artifacts:
    expire_in: 1 week

test:
  stage: build_and_test
  image: docker:24.0.5
  script:
    - apk add --no-cache bash make
    - cd _scripts
    - echo "ğŸ”¨ Building test"
    - bash build "test"
    - echo "ğŸ§ª Testing test"
    - bash test "test"
  artifacts:
    expire_in: 1 week

valentine:
  stage: build_and_test
  image: docker:24.0.5
  script:
    - apk add --no-cache bash make
    - cd _scripts
    - echo "ğŸ”¨ Building valentine"
    - bash build "valentine"
    - echo "ğŸ§ª Testing valentine"
    - bash test "valentine"
  artifacts:
    expire_in: 1 week

